function prob = event_graze_bd(prob,data,ev_ind,boundary)
%EVENT_GRAZE_BD Add monitor function and detection of boundary grazing 
%events in the COCO compatible problem
% Input:
%   prob: COCO compatible problem structure generated by pwsdde_coco_prob.m
%   data: collocation data structure
%   ev_ind: indicies of events to check for grazing (default all)
%   boundary: if true stop the continuation run when a grazing event is
%       detected (default true)
% Output:
%   prob: COCO compatible continuation problem structure with vanishing
%       segment detection function

if nargin<3 || isempty(ev_ind)
    ev_ind = 1:length(data.seg);   % check all events by default
end
if nargin<4
    boundary = true; % boundary event by default
end

% add an event and monitor function for each listed in ev_ind
uidx = prob.efunc.x_idx;
for i = ev_ind
    fid = sprintf('graze_bd%i',i);
    pid = sprintf('gr.bd(%i)',i);
    prob = coco_add_func(prob, fid, @(p,d,u) pwsdde_ext_graze(p,d,u,i),...
        data,'regular',pid,'uidx',uidx,'F+DF');
    % add event corresponding to reaching the grazing boundary
    if boundary
        prob = coco_add_event(prob,'BGR','boundary', pid,'=',0);
    else
        prob = coco_add_event(prob,'BGR','special point', pid,'=',0);
    end

end

end

